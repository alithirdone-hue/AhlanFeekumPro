

@page "/only-for-you-sections"

@attribute [Authorize(AhlanFeekumProPermissions.OnlyForYouSections.Default)]
@using AhlanFeekumPro.OnlyForYouSections
@using AhlanFeekumPro.Localization
@using AhlanFeekumPro.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using AhlanFeekumPro.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using Volo.Abp.Http.Client
@inherits AhlanFeekumProComponentBase
@inject IOnlyForYouSectionsAppService OnlyForYouSectionsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<AhlanFeekumProResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["OnlyForYouSections"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
@*//<suite-custom-code-block-1>*@
@*//</suite-custom-code-block-1>*@
        <Row>
            <div class="col-md-8 col-lg-10">
                <div class="mb-3">
                    <Form id="OnlyForYouSectionSearchForm">
                        <Addons>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit @bind-Text="@Filter.FilterText"
                                        Autofocus="true"
                                        Placeholder="@L["Search"]">
                                </TextEdit>
                            </Addon>
                            <Addon AddonType="AddonType.End">
                                <SubmitButton Form="OnlyForYouSectionSearchForm" Clicked="GetOnlyForYouSectionsAsync">
                                    <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                                </SubmitButton>
                            </Addon>
                        </Addons>
                    </Form>
                </div>
            </div>
                
            
        </Row>

@*//<suite-custom-code-block-3>*@
@*//</suite-custom-code-block-3>*@
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>        
        @if (SelectedOnlyForYouSections.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllOnlyForYouSectionsSelected)
                {
                    <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                    </p>
                }
                else
                {
                    <p class="lead mb-0">
                        @if (SelectedOnlyForYouSections.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedOnlyForYouSections.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                    </p>
                }
                    
                <div>
                    @if ((SelectedOnlyForYouSections.Count == PageSize || SelectedOnlyForYouSections.Count == OnlyForYouSectionList.Count) && TotalCount > SelectedOnlyForYouSections.Count)
                    {
                        if (!AllOnlyForYouSectionsSelected)
                        {
                            <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                            <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }
                    
                    <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedOnlyForYouSectionsAsync">
                        <Icon Name="@IconName.Delete" /> @L["Delete"]
                    </Button>
                </div>
            </div>
            
            <hr class="my-1 mx-0"/>
        }
        <DataGrid TItem="OnlyForYouSectionDto"
                  Data="OnlyForYouSectionList"
                  
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedOnlyForYouSections"
                  RowSelectable="@((args) => CanDeleteOnlyForYouSection)"
                  SelectedRowsChanged="SelectedOnlyForYouSectionRowsChanged"
                  
                  
                  
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                       <RadarSpinner />
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>   
            <DataGridColumns>
                
                @if (CanDeleteOnlyForYouSection && OnlyForYouSectionList.Any())
                {
                    <DataGridMultiSelectColumn TItem="OnlyForYouSectionDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }
                
                <DataGridEntityActionsColumn TItem="OnlyForYouSectionDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="OnlyForYouSectionDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="OnlyForYouSectionDto"
                                          Visible="@CanEditOnlyForYouSection"
                                          Clicked="async () => await OpenEditOnlyForYouSectionModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="OnlyForYouSectionDto"
                                          Visible="@CanDeleteOnlyForYouSection"
                                          Clicked="() => DeleteOnlyForYouSectionAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>
@*//<suite-custom-code-block-4>*@
@*//</suite-custom-code-block-4>*@
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
              <DataGridColumn TItem="OnlyForYouSectionDto"
                      Field="FirstPhotoId"
                      Caption="@L["FirstPhoto"]">
                      <DisplayTemplate>
                        @if (context.FirstPhotoId != null && context.FirstPhotoId != Guid.Empty)
                        {   
                            <Icon Name="IconName.FileAlt" Clicked="async () => await DownloadFileAsync(context.FirstPhotoId)" />
                        }
                        else
                        {
                            <span>"-"</span>
                        }
                      </DisplayTemplate>
              </DataGridColumn>

              <DataGridColumn TItem="OnlyForYouSectionDto"
                      Field="SecondPhotoId"
                      Caption="@L["SecondPhoto"]">
                      <DisplayTemplate>
                        @if (context.SecondPhotoId != null && context.SecondPhotoId != Guid.Empty)
                        {   
                            <Icon Name="IconName.FileAlt" Clicked="async () => await DownloadFileAsync(context.SecondPhotoId)" />
                        }
                        else
                        {
                            <span>"-"</span>
                        }
                      </DisplayTemplate>
              </DataGridColumn>

              <DataGridColumn TItem="OnlyForYouSectionDto"
                      Field="ThirdPhotoId"
                      Caption="@L["ThirdPhoto"]">
                      <DisplayTemplate>
                        @if (context.ThirdPhotoId != null && context.ThirdPhotoId != Guid.Empty)
                        {   
                            <Icon Name="IconName.FileAlt" Clicked="async () => await DownloadFileAsync(context.ThirdPhotoId)" />
                        }
                        else
                        {
                            <span>"-"</span>
                        }
                      </DisplayTemplate>
              </DataGridColumn>

            </DataGridColumns>
            
            
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateOnlyForYouSectionModal" Closing="@CreateOnlyForYouSectionModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-5>*@
@*//</suite-custom-code-block-5>*@
        <Form id="CreateOnlyForYouSectionForm">
            <ModalHeader>
                <ModalTitle>@L["NewOnlyForYouSection"]</ModalTitle>
                <CloseButton Clicked="CloseCreateOnlyForYouSectionModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewOnlyForYouSectionValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewOnlyForYouSection"
                            ValidateOnLoad="false">
                    
                    
                        <Field>
                            <FieldLabel>@L["FirstPhoto"] *</FieldLabel>
                            <InputFile class="form-control file-input" OnChange="@OnNewOnlyForYouSectionFirstPhotoChanged" required/>
                            @if (OnNewOnlyForYouSectionFirstPhotoLoading)
                            {
                                <p>@L["FileUploading"]</p>
                            }
                            <p class="text-muted pt-1"><i class="fa fa-info-circle"></i> @L["MaxFileSizeLimit", 10]</p>
                        </Field>


                        <Field>
                            <FieldLabel>@L["SecondPhoto"] *</FieldLabel>
                            <InputFile class="form-control file-input" OnChange="@OnNewOnlyForYouSectionSecondPhotoChanged" required/>
                            @if (OnNewOnlyForYouSectionSecondPhotoLoading)
                            {
                                <p>@L["FileUploading"]</p>
                            }
                            <p class="text-muted pt-1"><i class="fa fa-info-circle"></i> @L["MaxFileSizeLimit", 10]</p>
                        </Field>


                        <Field>
                            <FieldLabel>@L["ThirdPhoto"] *</FieldLabel>
                            <InputFile class="form-control file-input" OnChange="@OnNewOnlyForYouSectionThirdPhotoChanged" required/>
                            @if (OnNewOnlyForYouSectionThirdPhotoLoading)
                            {
                                <p>@L["FileUploading"]</p>
                            }
                            <p class="text-muted pt-1"><i class="fa fa-info-circle"></i> @L["MaxFileSizeLimit", 10]</p>
                        </Field>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateOnlyForYouSectionModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateOnlyForYouSectionForm" Clicked="CreateOnlyForYouSectionAsync" Disabled="@IsCreateFormDisabled()"/>
@*//<suite-custom-code-block-6>*@
@*//</suite-custom-code-block-6>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-7>*@
@*//</suite-custom-code-block-7>*@
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditOnlyForYouSectionModal" Closing="@EditOnlyForYouSectionModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-8>*@
@*//</suite-custom-code-block-8>*@
        <Form id="EditOnlyForYouSectionForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditOnlyForYouSectionModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingOnlyForYouSectionValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingOnlyForYouSection"
                            ValidateOnLoad="false">
                    
                    
                    <Field>
                        <FieldLabel>@L["FirstPhoto"] *</FieldLabel>
                        @if (HasSelectedOnlyForYouSectionFirstPhoto)
                        {
                            <div class="mb-2">
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="tooltip" data-bs-placement="top" title="@L["DownloadSelectedFile"].Value" @onclick="@(async () => await DownloadFileAsync(EditingOnlyForYouSection.FirstPhotoId))"><i class="fa fa-file-alt"></i></button>
                                    <button type="button" class="btn btn-primary btn-danger" data-bs-toggle="tooltip" data-bs-placement="top" title="@L["RemoveSelectedFile"].Value" @onclick="(() => { EditingOnlyForYouSection.FirstPhotoId = Guid.Empty; HasSelectedOnlyForYouSectionFirstPhoto = false; })"><i class="fa fa-trash"></i></button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <Field>
                                <InputFile class="form-control file-input" OnChange="@OnEditOnlyForYouSectionFirstPhotoChanged" required/>
                                @if (OnEditOnlyForYouSectionFirstPhotoLoading)
                                {
                                    <p>@L["FileUploading"]</p>
                                }
                                <p class="text-muted pt-1"><i class="fa fa-info-circle"></i> @L["MaxFileSizeLimit", 10]</p>
                            </Field>
                        }
                    </Field>

                    <Field>
                        <FieldLabel>@L["SecondPhoto"] *</FieldLabel>
                        @if (HasSelectedOnlyForYouSectionSecondPhoto)
                        {
                            <div class="mb-2">
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="tooltip" data-bs-placement="top" title="@L["DownloadSelectedFile"].Value" @onclick="@(async () => await DownloadFileAsync(EditingOnlyForYouSection.SecondPhotoId))"><i class="fa fa-file-alt"></i></button>
                                    <button type="button" class="btn btn-primary btn-danger" data-bs-toggle="tooltip" data-bs-placement="top" title="@L["RemoveSelectedFile"].Value" @onclick="(() => { EditingOnlyForYouSection.SecondPhotoId = Guid.Empty; HasSelectedOnlyForYouSectionSecondPhoto = false; })"><i class="fa fa-trash"></i></button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <Field>
                                <InputFile class="form-control file-input" OnChange="@OnEditOnlyForYouSectionSecondPhotoChanged" required/>
                                @if (OnEditOnlyForYouSectionSecondPhotoLoading)
                                {
                                    <p>@L["FileUploading"]</p>
                                }
                                <p class="text-muted pt-1"><i class="fa fa-info-circle"></i> @L["MaxFileSizeLimit", 10]</p>
                            </Field>
                        }
                    </Field>

                    <Field>
                        <FieldLabel>@L["ThirdPhoto"] *</FieldLabel>
                        @if (HasSelectedOnlyForYouSectionThirdPhoto)
                        {
                            <div class="mb-2">
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-primary" data-bs-toggle="tooltip" data-bs-placement="top" title="@L["DownloadSelectedFile"].Value" @onclick="@(async () => await DownloadFileAsync(EditingOnlyForYouSection.ThirdPhotoId))"><i class="fa fa-file-alt"></i></button>
                                    <button type="button" class="btn btn-primary btn-danger" data-bs-toggle="tooltip" data-bs-placement="top" title="@L["RemoveSelectedFile"].Value" @onclick="(() => { EditingOnlyForYouSection.ThirdPhotoId = Guid.Empty; HasSelectedOnlyForYouSectionThirdPhoto = false; })"><i class="fa fa-trash"></i></button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <Field>
                                <InputFile class="form-control file-input" OnChange="@OnEditOnlyForYouSectionThirdPhotoChanged" required/>
                                @if (OnEditOnlyForYouSectionThirdPhotoLoading)
                                {
                                    <p>@L["FileUploading"]</p>
                                }
                                <p class="text-muted pt-1"><i class="fa fa-info-circle"></i> @L["MaxFileSizeLimit", 10]</p>
                            </Field>
                        }
                    </Field>

                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditOnlyForYouSectionModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditOnlyForYouSectionForm" Clicked="UpdateOnlyForYouSectionAsync" Disabled="@IsEditFormDisabled()" />
@*//<suite-custom-code-block-9>*@
@*//</suite-custom-code-block-9>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-10>*@
@*//</suite-custom-code-block-10>*@
    </ModalContent>
</Modal>

