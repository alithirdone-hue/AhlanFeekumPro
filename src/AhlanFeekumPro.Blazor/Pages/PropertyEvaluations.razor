

@page "/property-evaluations"

@attribute [Authorize(AhlanFeekumProPermissions.PropertyEvaluations.Default)]
@using AhlanFeekumPro.PropertyEvaluations
@using AhlanFeekumPro.Localization
@using AhlanFeekumPro.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using AhlanFeekumPro.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using Volo.Abp.Http.Client
@inherits AhlanFeekumProComponentBase
@inject IPropertyEvaluationsAppService PropertyEvaluationsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<AhlanFeekumProResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["PropertyEvaluations"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
@*//<suite-custom-code-block-1>*@
@*//</suite-custom-code-block-1>*@
        <Row>
            <div class="col-md-8 col-lg-10">
                <div class="mb-3">
                    <Form id="PropertyEvaluationSearchForm">
                        <Addons>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit @bind-Text="@Filter.FilterText"
                                        Autofocus="true"
                                        Placeholder="@L["Search"]">
                                </TextEdit>
                            </Addon>
                            <Addon AddonType="AddonType.End">
                                <SubmitButton Form="PropertyEvaluationSearchForm" Clicked="GetPropertyEvaluationsAsync">
                                    <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                                </SubmitButton>
                            </Addon>
                        </Addons>
                    </Form>
                </div>
            </div>
                
                   <div class="col-md-4 col-lg-2">
            <div class="mb-3">
               <Button Color="Color.Primary" Outline Style="width:100%" id="AdvancedFilterSectionToggler"
                         Clicked="@(() => ShowAdvancedFilters = !ShowAdvancedFilters)">@L["Filters"]
                         <i aria-hidden="true" class="fa ms-1 @(!ShowAdvancedFilters ? "fa-angle-down" : "fa-angle-up")"></i>
               </Button>
            </div>
       </div>
        
        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")"  class="mt-3">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinCleanliness"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.CleanlinessMin"
             ValueChanged="@OnCleanlinessMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxCleanliness"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.CleanlinessMax"
             ValueChanged="@OnCleanlinessMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinPriceAndValue"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.PriceAndValueMin"
             ValueChanged="@OnPriceAndValueMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxPriceAndValue"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.PriceAndValueMax"
             ValueChanged="@OnPriceAndValueMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinLocation"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.LocationMin"
             ValueChanged="@OnLocationMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxLocation"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.LocationMax"
             ValueChanged="@OnLocationMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinAccuracy"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.AccuracyMin"
             ValueChanged="@OnAccuracyMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxAccuracy"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.AccuracyMax"
             ValueChanged="@OnAccuracyMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinAttitude"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.AttitudeMin"
             ValueChanged="@OnAttitudeMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxAttitude"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.AttitudeMax"
             ValueChanged="@OnAttitudeMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["RatingComment"]</FieldLabel>
                        <TextEdit Text="@Filter.RatingComment" TextChanged="@OnRatingCommentChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid?"
		SelectedValue="@Filter.UserProfileId"
		SelectedValueChanged="@OnUserProfileIdChangedAsync">

<SelectItem></SelectItem>

@foreach(var item in UserProfilesCollection)
{
	<SelectItem TValue="Guid" Value="@item.Id">
		@item.DisplayName
	</SelectItem>
}

</Select>                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["SiteProperty"]</FieldLabel>
                        <Select TValue="Guid?"
		SelectedValue="@Filter.SitePropertyId"
		SelectedValueChanged="@OnSitePropertyIdChangedAsync">

<SelectItem></SelectItem>

@foreach(var item in SitePropertiesCollection)
{
	<SelectItem TValue="Guid" Value="@item.Id">
		@item.DisplayName
	</SelectItem>
}

</Select>                       
                    </Field>
                </Column>
            </Row>
@*//<suite-custom-code-block-2>*@
@*//</suite-custom-code-block-2>*@
        </div>

        </Row>

@*//<suite-custom-code-block-3>*@
@*//</suite-custom-code-block-3>*@
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>        
        @if (SelectedPropertyEvaluations.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllPropertyEvaluationsSelected)
                {
                    <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                    </p>
                }
                else
                {
                    <p class="lead mb-0">
                        @if (SelectedPropertyEvaluations.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedPropertyEvaluations.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                    </p>
                }
                    
                <div>
                    @if ((SelectedPropertyEvaluations.Count == PageSize || SelectedPropertyEvaluations.Count == PropertyEvaluationList.Count) && TotalCount > SelectedPropertyEvaluations.Count)
                    {
                        if (!AllPropertyEvaluationsSelected)
                        {
                            <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                            <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }
                    
                    <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedPropertyEvaluationsAsync">
                        <Icon Name="@IconName.Delete" /> @L["Delete"]
                    </Button>
                </div>
            </div>
            
            <hr class="my-1 mx-0"/>
        }
        <DataGrid TItem="PropertyEvaluationWithNavigationPropertiesDto"
                  Data="PropertyEvaluationList"
                  
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedPropertyEvaluations"
                  RowSelectable="@((args) => CanDeletePropertyEvaluation)"
                  SelectedRowsChanged="SelectedPropertyEvaluationRowsChanged"
                  
                  
                  
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                       <RadarSpinner />
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>   
            <DataGridColumns>
                
                @if (CanDeletePropertyEvaluation && PropertyEvaluationList.Any())
                {
                    <DataGridMultiSelectColumn TItem="PropertyEvaluationWithNavigationPropertiesDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }
                
                <DataGridEntityActionsColumn TItem="PropertyEvaluationWithNavigationPropertiesDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="PropertyEvaluationWithNavigationPropertiesDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="PropertyEvaluationWithNavigationPropertiesDto"
                                          Visible="@CanEditPropertyEvaluation"
                                          Clicked="async () => await OpenEditPropertyEvaluationModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="PropertyEvaluationWithNavigationPropertiesDto"
                                          Visible="@CanDeletePropertyEvaluation"
                                          Clicked="() => DeletePropertyEvaluationAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>
@*//<suite-custom-code-block-4>*@
@*//</suite-custom-code-block-4>*@
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
              <DataGridColumn TItem="PropertyEvaluationWithNavigationPropertiesDto"
                      Field="PropertyEvaluation.Cleanliness"
                      Caption="@L["Cleanliness"]">
              </DataGridColumn>

              <DataGridColumn TItem="PropertyEvaluationWithNavigationPropertiesDto"
                      Field="PropertyEvaluation.PriceAndValue"
                      Caption="@L["PriceAndValue"]">
              </DataGridColumn>

              <DataGridColumn TItem="PropertyEvaluationWithNavigationPropertiesDto"
                      Field="PropertyEvaluation.Location"
                      Caption="@L["Location"]">
              </DataGridColumn>

              <DataGridColumn TItem="PropertyEvaluationWithNavigationPropertiesDto"
                      Field="PropertyEvaluation.Accuracy"
                      Caption="@L["Accuracy"]">
              </DataGridColumn>

              <DataGridColumn TItem="PropertyEvaluationWithNavigationPropertiesDto"
                      Field="PropertyEvaluation.Attitude"
                      Caption="@L["Attitude"]">
              </DataGridColumn>

              <DataGridColumn TItem="PropertyEvaluationWithNavigationPropertiesDto"
                      Field="PropertyEvaluation.RatingComment"
                      Caption="@L["RatingComment"]">
              </DataGridColumn>

              <DataGridColumn TItem="PropertyEvaluationWithNavigationPropertiesDto"
                      Field="UserProfile.Name"
                      Caption="@L["UserProfile"]">
              </DataGridColumn>

              <DataGridColumn TItem="PropertyEvaluationWithNavigationPropertiesDto"
                      Field="SiteProperty.PropertyTitle"
                      Caption="@L["SiteProperty"]">
              </DataGridColumn>

            </DataGridColumns>
            
            
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreatePropertyEvaluationModal" Closing="@CreatePropertyEvaluationModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-5>*@
@*//</suite-custom-code-block-5>*@
        <Form id="CreatePropertyEvaluationForm">
            <ModalHeader>
                <ModalTitle>@L["NewPropertyEvaluation"]</ModalTitle>
                <CloseButton Clicked="CloseCreatePropertyEvaluationModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewPropertyEvaluationValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewPropertyEvaluation"
                            ValidateOnLoad="false">
                    
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Cleanliness"] *</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewPropertyEvaluation.Cleanliness"  Min="PropertyEvaluationConsts.CleanlinessMinLength" Max="PropertyEvaluationConsts.CleanlinessMaxLength" Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["PriceAndValue"] *</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewPropertyEvaluation.PriceAndValue"  Min="PropertyEvaluationConsts.PriceAndValueMinLength" Max="PropertyEvaluationConsts.PriceAndValueMaxLength" Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Location"] *</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewPropertyEvaluation.Location"  Min="PropertyEvaluationConsts.LocationMinLength" Max="PropertyEvaluationConsts.LocationMaxLength" Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Accuracy"] *</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewPropertyEvaluation.Accuracy"  Min="PropertyEvaluationConsts.AccuracyMinLength" Max="PropertyEvaluationConsts.AccuracyMaxLength" Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Attitude"] *</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewPropertyEvaluation.Attitude"  Min="PropertyEvaluationConsts.AttitudeMinLength" Max="PropertyEvaluationConsts.AttitudeMaxLength" Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["RatingComment"]</FieldLabel>
                            <TextEdit @bind-Text="@NewPropertyEvaluation.RatingComment"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@NewPropertyEvaluation.UserProfileId">
                            @foreach (var userProfile in UserProfilesCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(userProfile.Id)">
                                    @(userProfile.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    <Field>
                        <FieldLabel>@L["SiteProperty"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@NewPropertyEvaluation.SitePropertyId">
                            @foreach (var siteProperty in SitePropertiesCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(siteProperty.Id)">
                                    @(siteProperty.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreatePropertyEvaluationModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreatePropertyEvaluationForm" Clicked="CreatePropertyEvaluationAsync"/>
@*//<suite-custom-code-block-6>*@
@*//</suite-custom-code-block-6>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-7>*@
@*//</suite-custom-code-block-7>*@
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditPropertyEvaluationModal" Closing="@EditPropertyEvaluationModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-8>*@
@*//</suite-custom-code-block-8>*@
        <Form id="EditPropertyEvaluationForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditPropertyEvaluationModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingPropertyEvaluationValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingPropertyEvaluation"
                            ValidateOnLoad="false">
                    
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Cleanliness"] *</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingPropertyEvaluation.Cleanliness"  Min="PropertyEvaluationConsts.CleanlinessMinLength" Max="PropertyEvaluationConsts.CleanlinessMaxLength" Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["PriceAndValue"] *</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingPropertyEvaluation.PriceAndValue"  Min="PropertyEvaluationConsts.PriceAndValueMinLength" Max="PropertyEvaluationConsts.PriceAndValueMaxLength" Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Location"] *</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingPropertyEvaluation.Location"  Min="PropertyEvaluationConsts.LocationMinLength" Max="PropertyEvaluationConsts.LocationMaxLength" Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Accuracy"] *</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingPropertyEvaluation.Accuracy"  Min="PropertyEvaluationConsts.AccuracyMinLength" Max="PropertyEvaluationConsts.AccuracyMaxLength" Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Attitude"] *</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingPropertyEvaluation.Attitude"  Min="PropertyEvaluationConsts.AttitudeMinLength" Max="PropertyEvaluationConsts.AttitudeMaxLength" Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["RatingComment"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingPropertyEvaluation.RatingComment"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@EditingPropertyEvaluation.UserProfileId">
                            @foreach (var userProfile in UserProfilesCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(userProfile.Id)">
                                    @(userProfile.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    <Field>
                        <FieldLabel>@L["SiteProperty"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@EditingPropertyEvaluation.SitePropertyId">
                            @foreach (var siteProperty in SitePropertiesCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(siteProperty.Id)">
                                    @(siteProperty.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditPropertyEvaluationModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditPropertyEvaluationForm" Clicked="UpdatePropertyEvaluationAsync" />
@*//<suite-custom-code-block-9>*@
@*//</suite-custom-code-block-9>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-10>*@
@*//</suite-custom-code-block-10>*@
    </ModalContent>
</Modal>

